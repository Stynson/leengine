
#deploy = emscripten
deploy = windows
#deploy = osx

# -------------------------------------------------------- compiler flags

ccflags += $cxx_symbols
ccflags += $cxx_speed_optimizations

filter deploy: windows
	includedirs += 3rdparty/bgfx/include
	libdirs += 3rdparty/bgfx/libs/vs2015_x64
	libs += bgfxRelease

	libs += gdi32

	#includedirs += 3rdparty/fmod/include
	#libdirs += 3rdparty/fmod/libs/vs2015_x64
	#libs += fmod64_vc fmodstudio64_vc
	#defines += FMOD_AVAILABLE

filter deploy: osx
	includedirs += 3rdparty/bgfx/include
	libdirs += 3rdparty/bgfx/libs/osx_x64
	libs += bgfxRelease

	frameworks += Cocoa CoreGraphics Quartz

filter deploy: emscripten
	cc = emcc.bat
	cxx = em++.bat

	includedirs += 3rdparty/bgfx/include
	libdirs += 3rdparty/bgfx/libs/emscripten

	ccflags =
	ccflags += -fomit-frame-pointer
	ccflags += -O3
	ccflags += -s AGGRESSIVE_VARIABLE_ELIMINATION=1
	ccflags += -g0
	libs += bgfxRelease
	cxxflags = $ccflags

	ldflags =
	ldflags += -fno-rtti -fno-exceptions
	ldflags += -s TOTAL_MEMORY=128000000
	ldflags += --preload-file res@/
	ldflags += --memory-init-file 1
	ldflags += -O3

defines += YAML_DECLARE_STATIC
defines += YAML_VERSION_MAJOR=0
defines += YAML_VERSION_MINOR=1
defines += YAML_VERSION_PATCH=5
defines += YAML_VERSION_STRING=\"0.1.5\"

includedirs += 3rdparty/fontstash
includedirs += 3rdparty/gb
includedirs += 3rdparty/stb
includedirs += 3rdparty/libyaml/include
includedirs += 3rdparty/jsmn
includedirs += 3rdparty/spine-c/include
includedirs += 3rdparty/klib
includedirs += 3rdparty/tinycthread
includedirs += 3rdparty/tlsf
includedirs += 3rdparty/chipmunk2d/include
includedirs += 3rdparty/entrypoint

includedirs += src/helpers
includedirs += src/shaders
includedirs += src

# -------------------------------------------------------- shader compilation

# TODO generate combined shader code ?

filter deploy: windows
	rule vshader
		command =  3rdparty/bgfx/bin/shaderc_win.exe -i 3rdparty/bgfx/include --type vertex   --platform windows -p vs_4_0 -O 3 -f $in -o $out --bin2c ${basename}
	rule fshader
		command =  3rdparty/bgfx/bin/shaderc_win.exe -i 3rdparty/bgfx/include --type fragment --platform windows -p ps_4_0 -O 3 -f $in -o $out --bin2c ${basename}
	rule texturec
		command = 3rdparty/bgfx/bin/texturecDebug_win.exe -f $in -o $out -t RGBA8
	rule bin2c
		command = 3rdparty/bin2c/bin2c.exe -n $name -o $out $in

filter deploy: osx
	rule vshader
		command = 3rdparty/bgfx/bin/shaderc_osx -i 3rdparty/bgfx/include --type vertex   --platform osx -f $in -o $out --bin2c ${basename}
	rule fshader
		command = 3rdparty/bgfx/bin/shaderc_osx -i 3rdparty/bgfx/include --type fragment --platform osx -f $in -o $out --bin2c ${basename}
	rule texturec
		command = 3rdparty/bgfx/bin/texturec_osx -f $in -o $out -t RGBA8
	rule bin2c
		command = 3rdparty/bin2c/bin2c -n $name -o $out $in

filter deploy: emscripten
	rule vshader
		command = 3rdparty/bgfx/bin/shaderc_win.exe -i 3rdparty/bgfx/include --type vertex   --platform linux -f $in -o $out --bin2c ${basename}
	rule fshader
		command = 3rdparty/bgfx/bin/shaderc_win.exe -i 3rdparty/bgfx/include --type fragment --platform linux -f $in -o $out --bin2c ${basename}
	rule texturec
		command = 3rdparty/bgfx/bin/texturecDebug_win.exe -f $in -o $out -t RGBA8
	rule bin2c
		command = 3rdparty/bin2c/bin2c.exe -n $name -o $out $in

build src/shaders/tex_color_vs.h: vshader src/shaders/tex_color.vs
	basename = tex_color_vs
build src/shaders/tex_color_fs.h: fshader src/shaders/tex_color.fs
	basename = tex_color_fs

build src/_missing_texture.ktx: texturec src/_missing_texture.png
build src/_missing_texture.h: bin2c src/_missing_texture.ktx
	name = _missing_texture

# -------------------------------------------------------- final app build

build objects(.build/**/*): auto **/*.c | src/_missing_texture.h || **/*.h

filter deploy: windows
	build application(.build/test): auto objects(.build/**/*)

filter deploy: osx
	build objects(.build/**/*): cc **/*.m | **/*.h
		ccflags += -fobjc-arc
	build application(.build/test): auto objects(.build/**/*)

filter deploy: emscripten
	build .build/test.html: link objects(.build/**/*)

